#ifndef DART_DRIVER_BMX160_H_
#define DART_DRIVER_BMX160_H_


#include "../../../chickenFlap/dart/digital.h"
#include "../../../chickenFlap/dart/spi.h"

#ifdef __cplusplus
extern "C" {
#endif

#define BMX160_REG_CHIP_ID 0x00
#define BMX160_CHIP_ID 0xD8

#define BMX160_REG_ERR 0x02
#define BMX160_REG_PMU_STATUS 0x03
#define BMX160_REG_MAG_X_7_0 0x04
#define BMX160_REG_MAG_X_15_8 0x05
#define BMX160_REG_MAG_Y_7_0 0x06
#define BMX160_REG_MAG_Y_15_8 0x07
#define BMX160_REG_MAG_Z_7_0 0x08
#define BMX160_REG_MAG_Z_15_8 0x09
#define BMX160_REG_RHALL_7_0 0x0A
#define BMX160_REG_RHALL_15_8 0x0B
#define BMX160_REG_GYR_X_7_0 0x0C
#define BMX160_REG_GYR_X_15_0 0x0D
#define BMX160_REG_GYR_Y_7_0 0x0E
#define BMX160_REG_GYR_Y_15_8 0x0F
#define BMX160_REG_GYR_Z_7_0 0x10
#define BMX160_REG_GYR_Z_15_8 0x11
#define BMX160_REG_ACC_X_7_0 0x12
#define BMX160_REG_ACC_X_15_8 0x13
#define BMX160_REG_ACC_Y_7_0 0x14
#define BMX160_REG_ACC_Y_15_8 0x15
#define BMX160_REG_ACC_Z_7_0 0x16
#define BMX160_REG_ACC_Z_15_8 0x17
#define BMX160_REG_SENSORTIME_7_0 0x18
#define BMX160_REG_SENSORTIME_15_8 0x19
#define BMX160_REG_SENSORTIME_23_15 0x1A
#define BMX160_REG_STATUS 0x1B
#define BMX160_REG_INT_STATUS_0 0x1C
#define BMX160_REG_INT_STATUS_1 0x1D
#define BMX160_REG_INT_STATUS_2 0x1E
#define BMX160_REG_INT_STATUS_3 0x1F
#define BMX160_REG_TEMPERATUR_7_0 0x20
#define BMX160_REG_TEMPERATUR_15_8 0x21


#define BMX160_REG_ACC_CONF 0x40
#define BMX160_REG_ACC_CONF_UNDERSAMPLING_ENABLE 1
#define BMX160_REG_ACC_CONF_UNDERSAMPLING_DISABLE_0
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_0_78125 0b0001
#define BMX160_REG_ACC_CONF_SMAPLE_RATE_1_5625 0b0010
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_3_125 0b0011
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_6_25 0b0100
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_12_5 0b0101
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_25 0b0110
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_50 0b0111
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_100 0b1000
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_200 0b1001
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_400 0b1010
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_800 0b1011
#define BMX160_REG_ACC_CONF_SAMPLE_RATE_1600 0b1100

#define BMX160_REG_ACC_RANGE 0x41
#define BMX160_REG_ACC_RANGE_2G 0b0011
#define BMX160_REG_ACC_RANGE_4G 0b0101
#define BMX160_REG_ACC_RANGE_8G 0b1000
#define BMX160_REG_ACC_RANGE_16G 0b1100

#define BMX160_REG_GYR_CONF 0x42
#define BMX160_REG_GYR_CONF_NORMAL_MODE 0b10
#define BMX160_REG_GYR_CONF_OVERSAMPLING_2 0b01
#define BMX160_REG_GYR_CONF_OVERSAMPLING_4 0b00
#define BMX160_REG_GYR_CONF_SAMPLE_RATE_25 0b0110
#define BMX160_REG_GYR_CONF_SAMPLE_RATE_50 0b0111
#define BMX160_REG_GYR_CONF_SAMPLE_RATE_100 0b1000
#define BMX160_REG_GYR_CONF_SAMPLE_RATE_200 0b1001
#define BMX160_REG_GYR_CONF_SAMPLE_RATE_400 0b1010
#define BMX160_REG_GYR_CONF_SAMPLE_RATE_800 0b1011
#define BMX160_REG_GYR_CONF_SAMPLE_RATE_1600 0b1100
#define BMX160_REG_GYR_CONF_SAMPLE_RATE_3200 0b1101

#define BMX160_REG_GYR_RANGE 0x43
#define BMX160_REG_GYR_RANGE_2000 0x0
#define BMX160_REG_GYR_RANGE_1000 0x1
#define BMX160_REG_GYR_RANGE_500 0x010
#define BMX160_REG_GYR_RANGE_250 0x011
#define BMX160_REG_GYR_RANGE_125 0x100

#define BMX160_REG_MAG_CONF 0x44
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_0_78125 0b0001
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_1_5625 0b0010
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_3_125 0b0011
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_6_25 0b0100
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_12_5 0b0101
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_25 0b0110
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_50 0b0111
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_100 0b1000
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_200 0b1001
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_400 0b1010
#define BMX160_REG_MAG_CONF_SAMPLE_RATE_800 0b1011

#define BMX160_REG_FOC_CONF 0x69
#define BMX160_REG_FOC_CONF_GYR_ENABLE 0x1
#define BMX160_REG_FOC_CONF_DISABLE 0x0
#define BMX160_REG_FOC_CONF_ACC_X_pG
#define BMX160_REG_FOC_CONF_ACC_X_mG
#define BMX160_REG_FOC_CONF_ACC_X_0G
#define BMX160_REG_FOC_CONF_ACC_Y_pG
#define BMX160_REG_FOC_CONF_ACC_Y_mG
#define BMX160_REG_FOC_CONF_ACC_Y_0G
#define BMX160_REG_FOC_CONF_ACC_Z_pG
#define BMX160_REG_FOC_CONF_ACC_Z_mG
#define BMX160_REG_FOC_CONF_ACC_Z_0G

#define BMX160_REG_IF_CONF 0x6A
#define BMX160_REG_IF_CONF_SPI_MODE_4 0x0
#define BMX160_REG_IF_CONF_SPI_MODE_3 0x1

#define BMX160_REG_NV_CONF 0x70
#define BMX160_REG_NV_CONF_ENABLE_I2C 0x1
#define BMX160_REG_NV_CONF_DISABLE_I2C 0x0
#define BMX160_REG_NV_CONF_I2C_WATCHDOG_1MS 0x0
#define BMX160_REG_NV_CONF_I2C_WATCHDOG_50MS 0x1
#define BMX160_REG_NV_CONF_DISABLE_SPI 0x1
#define BMC160_REG_NV_CONF_ENABLE_SPI 0x0

#define BMX160_REG_ACC_X_OFFSET_7_0 0x71

#define BMX160_REG_ACC_Y_OFFSET_7_0 0x72

#define BMX160_REG_ACC_Z_OFFSET_7_0 0x73

#define BMX160_REG_GYR_X_OFFSET_7_0 0x74

#define BMX160_REG_GYR_Y_OFFSET_7_0 0x75

#define BMX160_REG_GYR_Z_OFFSET_7_0 0x76

#define BMX160_REG_OFFSET_CONF 0x77
#define BMX160_REG_OFFSET_CONF_ENABLE_ACC_OFFSET 0x1
#define BMX160_REG_OFFSET_CONF_DISABLE_ACC_OFFSET 0x0
#define BMX160_REG_OFFSET_CONF_ENABLE_GYR_OFFSET 0x1
#define BMX160_REG_OFFSET_CONF_DISABLE_GYR_OFFSET 0x0

typedef union{
	uint16_t value_uint16[3];
	uint8_t value_uint8[6];
}bmx160_type_conversion_t;

typedef struct{
	uint8_t address;
	uint8_t default_value;
	uint8_t current_value;
}bmx160_reg_t;

typedef struct{
	uint8_t bus;
	uint8_t cs;
	bmx160_reg_t config[53];
}bmx160_device_t;

bool bmx160_reset(bmx160_device_t* device);
bool bmx160_get_chip_id(bmx160_device_t* device, uint8_t* id);
bool bmx160_get_acc_range(bmx160_device_t* device, uint8_t* range, bool default_value);

bool bmx160_read_register(bmx160_device_t* device, uint8_t addr, uint8_t* data, size_t size);
bool bmx160_write_register(bmx160_device_t* device, uint8_t addr, uint8_t data);

bool bmx160_read_mag(bmx160_device_t* device, float* mag_x, float* mag_y, float* mag_z);
bool bmx160_read_gyr(bmx160_device_t* device, float* gyr_x, float* gyr_y, float* gyr_z);
bool bmx160_read_acc(bmx160_device_t* device, float* acc_x, float* acc_y, float* acc_z);

bool bmx160_get_acc_range(bmx160_device_t* device, uint8_t* range, bool default_value);
bool bmx160_get_gyr_range(bmx160_device_t* device, uint16_t* range, bool default_value);

bool bmx160_init(bmx160_device_t* device);
bool bmx160_write_config(bmx160_device_t* device);

#ifdef __cplusplus
}
#endif

#endif
